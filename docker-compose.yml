version: "3"

services:

  eve_api:
    build: .
    container_name: my_eve_api
    ports:
      - "8000:8000"
    volumes:
      - .:/eve_safe_zone
    depends_on:
      - mysql_db
    environment:
      SECRET_KEY: ${SECRET_KEY}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    expose:
      - 8000
    command: python manage.py runserver 0.0.0.0:8000
    restart: always


  mysql_db:
    image: mysql:latest
    container_name: my_mysql
    command:
      - --default-authentication-plugin=caching_sha2_password
    environment:
      MYSQL_DATABASE: 'stardb'
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql_data:/docker-entrypoint-initdb.d
    env_file: .env
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  celery_worker:
    image: "celery:latest"
    container_name: my_c_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
    build:
      context: .
    env_file: .env
    command: celery -A eve worker --loglevel=info
    ports:
      - "5555:5555"
    depends_on:
      - mysql_db
      - redis
    restart: always

  celery_beat:
    container_name: my_c_beat
    build:
      context: .
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file: .env
    depends_on:
      - mysql_db
      - celery_worker
      - redis
    command: celery -A eve beat --loglevel=info
    restart: always

  redis:
    image: "redis:latest"
    container_name: my_redis
    restart: always
    ports:
      - "6379:6379"